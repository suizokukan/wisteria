### pimydoc : documentation source file
###
### Comment lines begin with ###
### If you modify STARTSYMB_IN_DOC please update ./check_code_quality.sh

[pimydoc]
### key : value (NOT key = value)
REGEX_SOURCE_FILTER : .+py$|.+sh$|.+md$|.+ini$

### (?P<doctitle>) is mandatory
REGEX_FIND_DOCTITLE : ^\[(?P<doctitle>.+)\]$

STARTSYMB_IN_DOC :⋅

PROFILE_PYTHON_SPACENBR_FOR_A_TAB : 4

REMOVE_FINAL_SPACES_IN_NEW_DOCLINES : True

### ==========================================================================
### ================================ SUMMARY =================================
### ==========================================================================
### (pimydoc)code structure
### (pimydoc)config file format
### (pimydoc)cwc modules names
### (pimydoc)DATA format
### (pimydoc)exit codes
### (pimydoc)progress bar
### (pimydoc)report sections
    
### ==========================================================================
[(pimydoc)code structure]
step A: command line arguments, --help message
- (A/00) minimal imports
- (A/01) command line parsing

step B: initializations & --checkup
- (B/02) normal imports & PLATFORM_SYSTEM initialization
- (B/03) wisteria.globs.ARGS initialization
- (B/04) a special case: if no argument has been given, we explicit the default values
- (B/05) --output string
- (B/06) logfile opening
- (B/07) msgxxx() functions can be used
- (B/08) check STR2REPORTSECTION_KEYS and STR2REPORTSECTION
- (B/09) project name & version
- (B/10) ARGS.report interpretation
- (B/11) exit handler
- (B/12) serializers import
- (B/13) temp file opening
- (B/14) known data init (to be placed after 'temp file opening')
- (B/15) checkup
- (B/16) informations about the current machine
- (B/17) download default config file

step C: main()
- (C/18) call to main()
       - (C/18.1) main(): debug messages
       - (C/18.2) main(): cmp string interpretation
       - (C/18.3) main(): config file reading
       - (C/18.4) main(): results computing
       - (C/18.5) main(): report
### ==========================================================================
[(pimydoc)config file format]

----------------------------------------------------------------
config file format                 read_cfgfile() returned value
----------------------------------------------------------------
(data selection)                   〖"data selection"〗 = {}
    data selection=all             〖"data selection"〗〖"data selection"〗 = str
                   only if yes
                   data set/xxx 
data sets                          〖"data sets"〗= {}
    data set/xxx=                  〖"data sets"〗〖"data set/xxx"〗 = set1;set2;...
data objects
    set1 = yes or false             〖"data objects"〗〖"set1"〗 = (bool)True/False
    set2 = yes or false
    ...
### ==========================================================================
[(pimydoc)cwc modules names]

cwc modules names start with the "wisteria.cwc" string (cf is_a_cwc_name())
    
moduleininame        : e.g. "wisteria.cwc.pgnreader.default.chessgames"
modulefullrealname   : e.g. "wisteria.cwc.pgnreader.default.ChessGames"
waemodulename        : e.g. "wisteria.cwc.pgnreader.works_as_expected"
classname            : e.g. "ChessGames" (NOT "chessgames")
modulerealname       : e.g. "wisteria.cwc.pgnreader.default"

- `moduleininame` are defined in config file;
- conversion from `moduleininame` to `modulefullrealname` is defined in
  data.py:DATA and is made by function
  cwc_utils.py:moduleininame_to_modulefullrealname()
- conversion from `modulefullrealname` to `modulerealname` is made by
  function cwc_utils.py:modulefullrealname_to_modulerealname()
- DATA keys (for cwc modules) use `moduleininame`, NOT `modulefullrealname`
### ==========================================================================
[(pimydoc)DATA format]
Initialized by data.py::init_data()
   
- for Python basic types, DATA values are the real value:
    e.g. DATA["bool/false"] = False
- for cwc modules, DATA keys are the ini name (not the real name)
  and DATA values are the real name:
    e.g. DATA["wisteria.cwc.pgnreader.iaswn.ChessGames"] =
        "wisteria.cwc.pgnreader.iaswn.chessgames"
- for third party types, DATA values are the real value:
    e.g. DATA["dateutil(parser.parse)"] = dateutil.parser.parse("2021-03-04")
###
### ==========================================================================    
[(pimydoc)exit codes]
*  0: normal exit code
*  1: normal exit code after --checkup
*  2: normal exit code after --downloadconfigfile
*  3: normal exit code after --mymachine
*  4: normal exit code (no data to handle)
* -1: error, given config file can't be read (missing or ill-formed file)
* -2: error, ill-formed --cmp string
* -3: internal error, data can't be loaded
* -4: internal error, an error occured while computing the results
* -5: internal error, an error in main()
* -6: error, ill-formed --output string
* -7: error, an absurd value has been computed
* -8: error, missing required module
* -9: error, STR2REPORTSECTION_KEYS and STR2REPORTSECTION don't match
### ==========================================================================
[(pimydoc)progress bar]
A progress bar is displayed only if verbosity is set to 1 (normal).
If verbosity is set to 0 (minimal), the progress bar is hidden since no
console output is authorized: it's important for scripts calling the
project from the outside.
If verbosity is set to 2 (details) or 3 (debug), the progress bar is hidden
in order to avoid mixing the progress bar with the text displayed while
computing the result, which is unpleasant to see.
### ==========================================================================
[(pimydoc)report sections]
* A         : main informations
  - A1      : options used to create reports
  - A2      : list of the serializers to be used
  - A3      : list of the data objects to be used
* B         : full details (raw results)
  - B1      : full details (serializers)
    . B1a   : full details: serializer * data object
    . B1b   : full details: serializers
    . B1c   : full details: serializers, hall of fame
    . B1d   : full details: full details: serializer <S> can't handle <dataobj>
  - B2      : full details (data objects)
    . B2a   : full details: data object * serializer
    . B2b   : full details: data objects
* C         : conclusions
  - C1      : conclusion: data objects handled/not handled by the serializer(s)
    . C1a   : conclusion: data objects handled by the serializer(s)
    . C1b   : conclusion: data objects NOT handled by the serializer(s)
  - C2      : conclusion: final text and data
    . C2a   : conclusion: serializers (not sorted)
    . C2b   : conclusion: overall score (based on: Σ strlen./Σ enc+dec time/enc⇆dec)
    . C2c   : conclusion
* D         : various informations
  - D1      : informations about the machine
    . D1a   : informations about the machine (no extensive details)
    . D1b   : informations about the machine (extensive details)
* graphs    : graphic visualizations
