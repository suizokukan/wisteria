# (pimydoc)config file format
# ⋅
# ⋅----------------------------------------------------------------
# ⋅config file format                 read_cfgfile() returned value
# ⋅----------------------------------------------------------------
# ⋅(data selection)                   〖"data selection"〗 = {}
# ⋅    data selection=all             〖"data selection"〗〖"data selection"〗 = str
# ⋅                   only if yes
# ⋅                   data set/xxx
# ⋅data sets                          〖"data sets"〗= {}
# ⋅    data set/xxx=                  〖"data sets"〗〖"data set/xxx"〗 = set1;set2;...
# ⋅data objects
# ⋅    set1 = yes or false             〖"data objects"〗〖"set1"〗 = (bool)True/False
# ⋅    set2 = yes or false
# ⋅    ...

[data selection]
# * 'all'
# * 'only if yes'
# * 'data set/xxx', e.g. 'data set/dicts'
data selection=only if yes

[data sets]
data set/dicts=dict(keys/str);dict(keys/int);dict(keys/bool)

[data objects]
# BEWARE !
# * names must be written in lower case
# * values expected are 'yes' or 'no'
# * PLEASE SYNCHRONIZE THIS LIST OF DATA WITH THE LIST IN
#   DATA.PY AND THE LIST IN README.MD.
array(b) = no
array(b/empty) = no
array(b_unsigned) = no
array(b_unsigned/empty) = no
array(u) = no
array(u/empty) = no
array(h) = no
array(h/empty) = no
array(h_unsigned) = no
array(h_unsigned/empty) = no
array(i) = no
array(i/empty) = no
array(i_unsigned) = no
array(i_unsigned/empty) = no
array(l) = no
array(l/empty) = no
array(l_unsigned) = no
array(l_unsigned/empty) = no
array(q) = no
array(q/empty) = no
array(q_unsigned) = no
array(q_unsigned/empty) = no
array(f) = no
array(f/empty) = no
array(d) = no
array(d/empty) = no

bool/false= yes
bool/true= yes

bytearray= no
bytearray(empty)= no

bytes= no
bytes(empty)= no

calendar(calendar(3))= no

collections.chainmap(empty)= no
collections.chainmap= no
collections.counter(empty)= no
collections.counter= no
collections.defaultdict(empty)= no
collections.defaultdict= no
collections.deque(empty)= no
collections.deque= no
collections.ordereddict(empty)= no
collections.ordereddict= no
    
complex= no

datetime(datetime.datetime)= no
datetime(datetime.timedelta)= no

dateutil(parser.parse)= no

decimal(0.5)= no
decimal(1/7)= no
decimal(nan)= no
decimal(-infinity)= no
decimal(+infinity)= no

dict(keys/bool)= no
dict(keys/float)= no
dict(keys/int)= no
dict(keys/str)= no
dict(keys/str+subdicts)= no
    
file descriptor= no

io.string= no
io.string(empty)= no

float= no
float(nan)= no

frozenset= no
frozenset(empty)= no

function= no
function(python)= no

hashlib(hashlib.sha1)= no
hashlib(hashlib.sha224)= no
hashlib(hashlib.sha256)= no
hashlib(hashlib.sha384)= no
hashlib(hashlib.sha512)= no

imported module= no
imported module(class)= no
imported module(function)= no

int= no

list= no
list(empty)= no
list(+sublists)= no

memoryview= no

metaclass= no

none= no

notimplemented= no

numbers(complex)= no
numbers(integral)= no
numbers(numbers)= no
numbers(real)= no

pythonexception typeerror= no

range= no
range(empty)= no

re.match= no
re.match(+flags)= no

re.pattern(bytes)= no
re.pattern(str)= no

regularclass= no
regularclass(async_method)= no
regularclass(class_method)= no
regularclass(generator)= no
regularclass(method)= no
regularclass(static_method)= no
regularclassinheriteddict= no
regularclassinheritedlist= no

set= no
set(empty)= no

str= no
str(empty)= no
str(long)= no
str(non ascii characters)= no

time(time.time)= no

tuple= no
tuple(empty)= no
tuple(+subtuples)= no

type(str)= no
type(type(str))= no

# (pimydoc)cwc modules names
# ⋅
# ⋅cwc modules names start with the "wisteria.cwc" string (cf is_a_cwc_name())
# ⋅
# ⋅moduleininame        : e.g. "wisteria.cwc.pgnreader.default.chessgames"
# ⋅modulefullrealname   : e.g. "wisteria.cwc.pgnreader.default.ChessGames"
# ⋅waemodulename        : e.g. "wisteria.cwc.pgnreader.works_as_expected"
# ⋅classname            : e.g. "ChessGames" (NOT "chessgames")
# ⋅modulerealname       : e.g. "wisteria.cwc.pgnreader.default"
# ⋅
# ⋅- `moduleininame` are defined in config file;
# ⋅- conversion from `moduleininame` to `modulefullrealname` is defined in
# ⋅  data.py:DATA and is made by function
# ⋅  cwc_utils.py:moduleininame_to_modulefullrealname()
# ⋅- conversion from `modulefullrealname` to `modulerealname` is made by
# ⋅  function cwc_utils.py:modulefullrealname_to_modulerealname()
# ⋅- DATA keys (for cwc modules) use `moduleininame`, NOT `modulefullrealname`
wisteria.cwc.pgnreader.default.chessgames= no
wisteria.cwc.pgnreader.iaswn.chessgames= no

wisteria.cwc.simple.default.simpleclass= yes
wisteria.cwc.simple.iaswn.simpleclass= yes

# (pimydoc)demonstration_dataobj_a5
# ⋅Data object used to show the encoded strings created by the serializers,
# ⋅see A5 report section.
# ⋅
# ⋅The choice of data is very small because all serializers must be able
# ⋅to encode it. By example, no None object because of Amazon Ion Python.
demonstration_dataobj_a5 = no