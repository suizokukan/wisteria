# (pimydoc)config file format
# ⋅
# ⋅----------------------------------------------------------------
# ⋅config file format                 read_cfgfile() returned value
# ⋅----------------------------------------------------------------
# ⋅(data selection)                   〖"data selection"〗 = {}
# ⋅    data selection=all             〖"data selection"〗〖"data selection"〗 = str
# ⋅                   only if yes
# ⋅                   data set/xxx
# ⋅data sets                          〖"data sets"〗= {}
# ⋅    data set/xxx=                  〖"data sets"〗〖"data set/xxx"〗 = set1;set2;...
# ⋅data objects
# ⋅    set1 = yes or false             〖"data objects"〗〖"set1"〗 = (bool)True/False
# ⋅    set2 = yes or false
# ⋅    ...

[data selection]
# * "all"
# * "only if yes"
# * "data set/xxx", e.g. "data set/dicts"
data selection=data set/dicts

[data sets]
data set/dicts=dict(keys/str);dict(keys/int);dict(keys/bool)

[data objects]
# BEWARE !
# * names must be written in lower case
# * values expected are 'yes' or 'no'
# * PLEASE SYNCHRONIZE THIS LIST OF DATA WITH THE LIST IN
#   DATA.PY AND THE LIST IN README.MD.
array(b) = yes
array(b/empty) = yes
array(b_unsigned) = yes
array(b_unsigned/empty) = yes
array(u) = yes
array(u/empty) = yes
array(h) = yes
array(h/empty) = yes
array(h_unsigned) = yes
array(h_unsigned/empty) = yes
array(i) = yes
array(i/empty) = yes
array(i_unsigned) = yes
array(i_unsigned/empty) = yes
array(l) = yes
array(l/empty) = yes
array(l_unsigned) = yes
array(l_unsigned/empty) = yes
array(q) = yes
array(q/empty) = yes
array(q_unsigned) = yes
array(q_unsigned/empty) = yes
array(f) = yes
array(f/empty) = yes
array(d) = yes
array(d/empty) = yes

bool/false=yes
bool/true=yes

bytearray=yes
bytearray(empty)=yes

bytes=yes
bytes(empty)=yes

calendar(calendar(3))=yes

collections.chainmap(empty)=yes
collections.chainmap=yes
collections.counter(empty)=yes
collections.counter=yes
collections.defaultdict(empty)=yes
collections.defaultdict=yes
collections.deque(empty)=yes
collections.deque=yes
collections.ordereddict(empty)=yes
collections.ordereddict=yes
    
complex=yes

datetime(datetime.datetime)=yes
datetime(datetime.timedelta)=yes

dateutil(parser.parse)=yes

decimal(0.5)=yes
decimal(1/7)=yes
decimal(nan)=yes
decimal(-infinity)=yes
decimal(+infinity)=yes

dict(keys/bool)=yes
dict(keys/float)=yes
dict(keys/int)=yes
dict(keys/str)=yes
dict(keys/str+subdicts)=yes
    
file descriptor=yes

io.string=yes
io.string(empty)=yes

float=yes
float(nan)=yes

frozenset=yes
frozenset(empty)=yes

function=yes
function(python)=yes

hashlib(hashlib.sha1)=yes
hashlib(hashlib.sha224)=yes
hashlib(hashlib.sha256)=yes
hashlib(hashlib.sha384)=yes
hashlib(hashlib.sha512)=yes

imported module=yes
imported module(class)=yes
imported module(function)=yes

int=yes

list=yes
list(empty)=yes
list(+sublists)=yes

memoryview=yes

metaclass=yes

none=yes

notimplemented=yes

numbers(complex)=yes
numbers(integral)=yes
numbers(numbers)=yes
numbers(real)=yes

pythonexception typeerror=yes

range=yes
range(empty)=yes

re.match=yes
re.match(+flags)=yes

re.pattern(bytes)=yes
re.pattern(str)=yes

regularclass=yes
regularclass(async_method)=yes
regularclass(class_method)=yes
regularclass(generator)=yes
regularclass(method)=yes
regularclass(static_method)=yes
regularclassinheriteddict=yes
regularclassinheritedlist=yes

set=yes
set(empty)=yes

str=yes
str(empty)=yes
str(long)=yes
str(non ascii characters)=yes

time(time.time)=yes

tuple=yes
tuple(empty)=yes
tuple(+subtuples)=yes

type(str)=yes
type(type(str))=yes

# (pimydoc)cwc modules names
# ⋅
# ⋅cwc modules names start with the "wisteria.cwc" string (cf is_a_cwc_name())
# ⋅
# ⋅moduleininame        : e.g. "wisteria.cwc.pgnreader.default.chessgames"
# ⋅modulefullrealname   : e.g. "wisteria.cwc.pgnreader.default.ChessGames"
# ⋅classname            : e.g. "ChessGames" (NOT "chessgames")
# ⋅modulerealname       : e.g. "wisteria.cwc.pgnreader.default"
# ⋅
# ⋅- `moduleininame` are defined in config file;
# ⋅- conversion from `moduleininame` to `modulefullrealname` is defined in
# ⋅  data.py:DATA and is made by function
# ⋅  cwc_utils.py:moduleininame_to_modulefullrealname()
# ⋅- conversion from `modulefullrealname` to `modulerealname` is made by
# ⋅  function cwc_utils.py:modulefullrealname_to_modulerealname()
# ⋅- DATA keys (for cwc modules) use `moduleininame`, NOT `modulefullrealname`
wisteria.cwc.pgnreader.default.chessgames=yes
wisteria.cwc.pgnreader.iaswn.chessgames=yes
